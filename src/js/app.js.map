{"version":3,"sources":["app.js"],"names":["node","tasksList","Map","BaseElementUpdater","inputKey","inputValue","li","document","createElement","className","id","lbl","checkbox","type","appendChild","lbl1","t","createTextNode","btn1","btn2","innerHTML","addEventListener","hideParentNode","getElementById","path","parentNode","style","display","showParentNode","btn1Edit","removeChileRow","ul","removeChild","delete","parseInt","liEdit","txtBoxEdit","value","btn2Edit","editedTxt","entries","entry","set","alert","tasksListVar","item","LoadDashboard","AddNewRecord","filter","a","i","toUpperCase","getElementsByTagName","length","indexOf","querySelector","checked"],"mappings":";;;;;;;;;;;;AAAA;AACA,IAAIA,OAAO,CAAX;AACA,IAAIC,YAAY,IAAIC,GAAJ,EAAhB;;IAEMC,kB;AACF,kCAAc;AAAA;AAAG;;;;sCAEHC,Q,EAAUC,U,EAAY;AAChC;AACA,gBAAIC,KAAKC,SAASC,aAAT,CAAuB,IAAvB,CAAT;AACAF,eAAGG,SAAH,GAAe,sCAAf;AACAH,eAAGI,EAAH,QAAWN,QAAX;;AAEA;AACA,gBAAIO,MAAMJ,SAASC,aAAT,CAAuB,OAAvB,CAAV;AACAG,gBAAIF,SAAJ,GAAgB,gBAAhB;AACA,gBAAIG,WAAWL,SAASC,aAAT,CAAuB,OAAvB,CAAf;AACAI,qBAASC,IAAT,GAAgB,UAAhB;AACAD,qBAASF,EAAT,YAAqBN,QAArB;AACAO,gBAAIG,WAAJ,CAAgBF,QAAhB;;AAEA;AACA,gBAAIG,OAAOR,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACAO,iBAAKN,SAAL,GAAiB,UAAjB;AACAM,iBAAKL,EAAL,YAAiBN,QAAjB;AACA,gBAAIY,IAAIT,SAASU,cAAT,CAAwBZ,UAAxB,CAAR;AACAU,iBAAKD,WAAL,CAAiBE,CAAjB;;AAEA;AACA,gBAAIE,OAAOX,SAASC,aAAT,CAAuB,QAAvB,CAAX;AACA,gBAAIW,OAAOZ,SAASC,aAAT,CAAuB,QAAvB,CAAX;AACAU,iBAAKT,SAAL,GAAiB,cAAjB;AACAU,iBAAKV,SAAL,GAAiB,cAAjB;AACAS,iBAAKR,EAAL,gBAAqBN,QAArB;AACAe,iBAAKT,EAAL,kBAAuBN,QAAvB;AACAc,iBAAKE,SAAL,GAAiB,MAAjB;AACAD,iBAAKC,SAAL,GAAiB,QAAjB;;AAEAF,iBAAKG,gBAAL,CAAsB,OAAtB,EAA+B,UAAUH,IAAV,EAAgB;AAC3C,oBAAII,iBAAiBf,SAASgB,cAAT,CAAwBL,KAAKM,IAAL,CAAU,CAAV,EAAad,EAArC,EAAyCe,UAA9D;AACAH,+BAAeI,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACA,oBAAIC,iBAAiBrB,SAASgB,cAAT,CAAwBM,SAASnB,EAAjC,EAAqCe,UAA1D;AACAG,+BAAeF,KAAf,CAAqBC,OAArB,GAA+B,EAA/B;AACH,aALD;AAMAR,iBAAKE,gBAAL,CAAsB,OAAtB,EAA+B,UAAUF,IAAV,EAAgB;AAC3C;AACA,oBAAIW,iBAAiBvB,SAASgB,cAAT,CAAwBJ,KAAKK,IAAL,CAAU,CAAV,EAAad,EAArC,EAAyCe,UAA9D;AACA,oBAAIM,KAAKD,eAAeL,UAAxB;AACAM,mBAAGC,WAAH,CAAeF,cAAf;AACA;AACAC,mBAAGC,WAAH,CAAezB,SAASgB,cAAT,CAAwBO,eAAepB,EAAvC,CAAf;;AAEA;AACAT,0BAAUgC,MAAV,CAAiBC,SAASJ,eAAepB,EAAxB,CAAjB;AACH,aAVD;;AAYA;AACAJ,eAAGQ,WAAH,CAAeH,GAAf;AACAL,eAAGQ,WAAH,CAAeC,IAAf;AACAT,eAAGQ,WAAH,CAAeI,IAAf;AACAZ,eAAGQ,WAAH,CAAeK,IAAf;;AAEA;AACAZ,qBAASgB,cAAT,CAAwB,MAAxB,EAAgCT,WAAhC,CAA4CR,EAA5C;;AAEA;AACA,gBAAI6B,SAAS5B,SAASC,aAAT,CAAuB,IAAvB,CAAb;AACA2B,mBAAO1B,SAAP,GAAmB,sCAAnB;AACA0B,mBAAOzB,EAAP,QAAeN,QAAf;AACA,gBAAIgC,aAAa7B,SAASC,aAAT,CAAuB,OAAvB,CAAjB;AACA4B,uBAAW3B,SAAX,GAAuB,WAAvB;AACA2B,uBAAWvB,IAAX,GAAkB,MAAlB;AACAuB,uBAAW1B,EAAX,mBAA8BN,QAA9B;AACAgC,uBAAWC,KAAX,GAAmBhC,UAAnB;AACA,gBAAIwB,WAAWtB,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACA,gBAAI8B,WAAW/B,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAqB,qBAASpB,SAAT,GAAqB,cAArB;AACA6B,qBAAS7B,SAAT,GAAqB,cAArB;AACAoB,qBAASnB,EAAT,oBAA6BN,QAA7B;AACAkC,qBAAS5B,EAAT,sBAA+BN,QAA/B;AACAyB,qBAAST,SAAT,GAAqB,MAArB;AACAkB,qBAASlB,SAAT,GAAqB,QAArB;AACAS,qBAASR,gBAAT,CAA0B,OAA1B,EAAmC,UAAUQ,QAAV,EAAoB;AACnD,oBAAIU,YAAYhC,SAASgB,cAAT,iBAAsCnB,QAAtC,EAAkDiC,KAAlE;AACA,oBAAIE,SAAJ,EAAe;AACX;AACAhC,6BAASgB,cAAT,UAA+BnB,QAA/B,EAA2CgB,SAA3C,GAAuDmB,SAAvD;AACA;AAHW;AAAA;AAAA;;AAAA;AAIX,6CAAkBtC,UAAUuC,OAAV,EAAlB,8HAAuC;AAAA,gCAA9BC,KAA8B;;AACnC,gCAAIA,MAAM,CAAN,MAAarC,QAAjB,EAA2B;AACvBH,0CAAUyC,GAAV,CAAcD,MAAM,CAAN,CAAd,EAAwBF,SAAxB;AACH;AACJ;;AAED;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWX,yBAAKd,UAAL,CAAgBC,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;AACA,wBAAIL,iBAAiBf,SAASgB,cAAT,CAAwBL,KAAKR,EAA7B,EAAiCe,UAAtD;AACAH,mCAAeI,KAAf,CAAqBC,OAArB,GAA+B,EAA/B;AACH,iBAdD,MAeK;AACDgB,0BAAM,2BAAN;AACH;AACJ,aApBD;AAqBAL,qBAASjB,gBAAT,CAA0B,OAA1B,EAAmC,UAAUiB,QAAV,EAAoB;AACnD,oBAAIV,iBAAiBrB,SAASgB,cAAT,CAAwBM,SAASnB,EAAjC,EAAqCe,UAA1D;AACAG,+BAAeF,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACA,oBAAIL,iBAAiBf,SAASgB,cAAT,CAAwBL,KAAKR,EAA7B,EAAiCe,UAAtD;AACAH,+BAAeI,KAAf,CAAqBC,OAArB,GAA+B,EAA/B;AACApB,yBAASgB,cAAT,iBAAsCnB,QAAtC,EAAkDiC,KAAlD,GAA0D9B,SAASgB,cAAT,UAA+BnB,QAA/B,EAA2CgB,SAArG;AACH,aAND;AAOAe,mBAAOrB,WAAP,CAAmBsB,UAAnB;AACAD,mBAAOrB,WAAP,CAAmBe,QAAnB;AACAM,mBAAOrB,WAAP,CAAmBwB,QAAnB;AACAH,mBAAOT,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACApB,qBAASgB,cAAT,CAAwB,MAAxB,EAAgCT,WAAhC,CAA4CqB,MAA5C;AACH;;AAED;;;;6BACKS,Y,EAAc;AACfrC,qBAASgB,cAAT,CAAwB,MAAxB,EAAgCH,SAAhC,GAA4C,EAA5C;AADe;AAAA;AAAA;;AAAA;AAEf,sCAAiBwB,YAAjB,mIAA+B;AAAA,wBAAtBC,IAAsB;;AAC3B,yBAAKC,aAAL,CAAmBD,KAAK,CAAL,CAAnB,EAA4BA,KAAK,CAAL,CAA5B;AACH;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKlB;;;;;;IAGCE,Y;;;AACF,4BAAc;AAAA;;AAAA;AAAY;;;;oCAEd;AACR,gBAAI1C,aAAaE,SAASgB,cAAT,CAAwB,YAAxB,EAAsCc,KAAvD;;AAEA,gBAAIhC,eAAe,EAAnB,EAAuB;AACnBsC,sBAAM,2BAAN;AACH,aAFD,MAGK;AACD1C,0BAAUyC,GAAV,CAAc1C,IAAd,EAAoBK,UAApB;AACA,iIAAWJ,SAAX;AACAD;AACH;AACDO,qBAASgB,cAAT,CAAwB,YAAxB,EAAsCc,KAAtC,GAA8C,EAA9C;AACH;;AAED;;;;qCACa;AACT,gBAAIW,eAAJ;AAAA,gBAAYjB,WAAZ;AAAA,gBAAgBzB,WAAhB;AAAA,gBAAoB2C,UAApB;AAAA,gBAAuBC,UAAvB;AACAF,qBAASzC,SAASgB,cAAT,CAAwB,YAAxB,EAAsCc,KAAtC,CAA4Cc,WAA5C,EAAT;AACApB,iBAAKxB,SAASgB,cAAT,CAAwB,MAAxB,CAAL;AACAjB,iBAAKyB,GAAGqB,oBAAH,CAAwB,IAAxB,CAAL;AACA,iBAAKF,IAAI,CAAT,EAAYA,IAAI5C,GAAG+C,MAAnB,EAA2BH,GAA3B,EAAgC;AAC5BD,oBAAI3C,GAAG4C,CAAH,EAAME,oBAAN,CAA2B,OAA3B,EAAoC,CAApC,CAAJ;AACA,oBAAIH,KAAK,IAAL,IAAaA,EAAE7B,SAAF,CAAY+B,WAAZ,GAA0BG,OAA1B,CAAkCN,MAAlC,IAA4C,CAAC,CAA9D,EAAiE;AAC7D1C,uBAAG4C,CAAH,EAAMxB,KAAN,CAAYC,OAAZ,GAAsB,EAAtB;AACH,iBAFD,MAGK;AACDrB,uBAAG4C,CAAH,EAAMxB,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACH;AACJ;AACJ;;AAED;;;;6CACqB;AAAA;AAAA;AAAA;;AAAA;AACjB,sCAAiB1B,SAAjB,mIAA4B;AAAA,wBAAnB4C,IAAmB;;AACxB,wBAAItC,SAASgD,aAAT,WAA+BV,KAAK,CAAL,CAA/B,EAA0CW,OAA9C,EAAuD;AACnDvD,kCAAUgC,MAAV,CAAiBY,KAAK,CAAL,CAAjB;AACH;AACJ;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMjB,6HAAW5C,SAAX;AACH;;;;EA1CsBE,kB","file":"app.js","sourcesContent":["//Global Variables\r\nlet node = 0;\r\nlet tasksList = new Map();\r\n\r\nclass BaseElementUpdater {\r\n    constructor() { }\r\n\r\n    LoadDashboard(inputKey, inputValue) {\r\n        //Creating li element\r\n        let li = document.createElement(\"li\");\r\n        li.className = \"list-group-item list-group-item-info\";\r\n        li.id = `${inputKey}`;\r\n\r\n        //Adding Label with Checkbox\r\n        let lbl = document.createElement('label');\r\n        lbl.className = \"check col-sm-1\";\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = \"checkbox\"\r\n        checkbox.id = `chk_${inputKey}`;\r\n        lbl.appendChild(checkbox);\r\n\r\n        //Adding Label with Input value\r\n        let lbl1 = document.createElement('label');\r\n        lbl1.className = \"col-sm-9\";\r\n        lbl1.id = `lbl_${inputKey}`;\r\n        let t = document.createTextNode(inputValue);\r\n        lbl1.appendChild(t);\r\n\r\n        //Adding Edit and Cancel buttons\r\n        let btn1 = document.createElement('button');\r\n        let btn2 = document.createElement('button');\r\n        btn1.className = \"btn btn-info\";\r\n        btn2.className = \"btn btn-info\";\r\n        btn1.id = `editBtn_${inputKey}`;\r\n        btn2.id = `removeBtn_${inputKey}`;\r\n        btn1.innerHTML = \"Edit\";\r\n        btn2.innerHTML = \"Remove\";\r\n\r\n        btn1.addEventListener('click', function (btn1) {\r\n            let hideParentNode = document.getElementById(btn1.path[0].id).parentNode;\r\n            hideParentNode.style.display = 'none';\r\n            let showParentNode = document.getElementById(btn1Edit.id).parentNode;\r\n            showParentNode.style.display = '';\r\n        });\r\n        btn2.addEventListener('click', function (btn2) {\r\n            //Deleting row from HTML\r\n            let removeChileRow = document.getElementById(btn2.path[0].id).parentNode;\r\n            let ul = removeChileRow.parentNode;\r\n            ul.removeChild(removeChileRow);\r\n            //Removing Edit elements for deleted row\r\n            ul.removeChild(document.getElementById(removeChileRow.id))\r\n\r\n            //Deleting record from Global list\r\n            tasksList.delete(parseInt(removeChileRow.id));\r\n        });\r\n\r\n        //Appending HTML dynamically to li node\r\n        li.appendChild(lbl);\r\n        li.appendChild(lbl1);\r\n        li.appendChild(btn1);\r\n        li.appendChild(btn2);\r\n\r\n        //Adding row to the dashboard\r\n        document.getElementById(\"myUL\").appendChild(li);\r\n\r\n        //Create HTML elements to Edit row\r\n        let liEdit = document.createElement(\"li\");\r\n        liEdit.className = \"list-group-item list-group-item-info\";\r\n        liEdit.id = `${inputKey}`;\r\n        let txtBoxEdit = document.createElement('input');\r\n        txtBoxEdit.className = \"col-sm-10\";\r\n        txtBoxEdit.type = \"text\";\r\n        txtBoxEdit.id = `editedText_${inputKey}`;\r\n        txtBoxEdit.value = inputValue;\r\n        let btn1Edit = document.createElement('button');\r\n        let btn2Edit = document.createElement('button');\r\n        btn1Edit.className = \"btn btn-info\";\r\n        btn2Edit.className = \"btn btn-info\";\r\n        btn1Edit.id = `editSaveBtn_${inputKey}`;\r\n        btn2Edit.id = `editCancelBtn_${inputKey}`;\r\n        btn1Edit.innerHTML = \"Save\";\r\n        btn2Edit.innerHTML = \"Cancel\";\r\n        btn1Edit.addEventListener('click', function (btn1Edit) {\r\n            let editedTxt = document.getElementById(`editedText_${inputKey}`).value;\r\n            if (editedTxt) {\r\n                //Edited HTML and global list\r\n                document.getElementById(`lbl_${inputKey}`).innerHTML = editedTxt;\r\n                //tasksList.Map(x => x[0] == inputKey ? editedTxt : x);\r\n                for (let entry of tasksList.entries()) {\r\n                    if (entry[0] === inputKey) {\r\n                        tasksList.set(entry[0], editedTxt);\r\n                    }\r\n                }\r\n\r\n                //Toggling Edit view to Readable view\r\n                this.parentNode.style.display = 'none';\r\n                let hideParentNode = document.getElementById(btn1.id).parentNode;\r\n                hideParentNode.style.display = '';\r\n            }\r\n            else {\r\n                alert(\"You must write something!\");\r\n            }\r\n        });\r\n        btn2Edit.addEventListener('click', function (btn2Edit) {\r\n            let showParentNode = document.getElementById(btn1Edit.id).parentNode;\r\n            showParentNode.style.display = 'none';\r\n            let hideParentNode = document.getElementById(btn1.id).parentNode;\r\n            hideParentNode.style.display = '';\r\n            document.getElementById(`editedText_${inputKey}`).value = document.getElementById(`lbl_${inputKey}`).innerHTML;\r\n        });\r\n        liEdit.appendChild(txtBoxEdit);\r\n        liEdit.appendChild(btn1Edit);\r\n        liEdit.appendChild(btn2Edit);\r\n        liEdit.style.display = \"none\";\r\n        document.getElementById(\"myUL\").appendChild(liEdit);\r\n    }\r\n\r\n    //Loading all the tasks\r\n    Load(tasksListVar) {\r\n        document.getElementById('myUL').innerHTML = \"\";\r\n        for (let item of tasksListVar) {\r\n            this.LoadDashboard(item[0], item[1]);\r\n        }\r\n    }\r\n}\r\n\r\nclass AddNewRecord extends BaseElementUpdater {\r\n    constructor() { super(); }\r\n\r\n    AddNewRow() {\r\n        let inputValue = document.getElementById(\"addNewTask\").value;\r\n\r\n        if (inputValue === '') {\r\n            alert(\"You must write something!\");\r\n        }\r\n        else {\r\n            tasksList.set(node, inputValue);\r\n            super.Load(tasksList);\r\n            node++;\r\n        }\r\n        document.getElementById(\"addNewTask\").value = '';\r\n    }\r\n\r\n    //Filter functionality\r\n    FilterData() {\r\n        let filter, ul, li, a, i;\r\n        filter = document.getElementById(\"searchTask\").value.toUpperCase();\r\n        ul = document.getElementById(\"myUL\");\r\n        li = ul.getElementsByTagName(\"li\");\r\n        for (i = 0; i < li.length; i++) {\r\n            a = li[i].getElementsByTagName(\"label\")[1];\r\n            if (a != null && a.innerHTML.toUpperCase().indexOf(filter) > -1) {\r\n                li[i].style.display = \"\";\r\n            }\r\n            else {\r\n                li[i].style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //Delete functionality\r\n    RemoveSelectedData() {\r\n        for (let item of tasksList) {\r\n            if (document.querySelector(`#chk_${item[0]}`).checked) {\r\n                tasksList.delete(item[0]);\r\n            }\r\n        }\r\n        super.Load(tasksList);\r\n    }\r\n\r\n}"]}