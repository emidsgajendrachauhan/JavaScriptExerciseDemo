{"version":3,"sources":["app.js"],"names":["node","tasksList","Array","BaseElementUpdater","inputKey","inputValue","li","document","createElement","className","id","lbl","checkbox","type","appendChild","lbl1","t","createTextNode","btn1","btn2","innerHTML","addEventListener","getElementById","path","console","log","removeChileRow","parentNode","ul","removeChild","splice","findIndex","index","key","parseInt","item","LoadDashboard","value","AddNewRecord","alert","push"],"mappings":";;;;;;;;;;;;AAAA;AACA,IAAIA,OAAO,CAAX;AACA,IAAIC,YAAY,IAAIC,KAAJ,EAAhB;;IAEMC,kB;AACF,kCAAc;AAAA;AAAG;;;;sCAEHC,Q,EAAUC,U,EAAY;AAChC;AACA,gBAAIC,KAAKC,SAASC,aAAT,CAAuB,IAAvB,CAAT;AACAF,eAAGG,SAAH,GAAe,sCAAf;AACAH,eAAGI,EAAH,QAAWN,QAAX;;AAEA;AACA,gBAAIO,MAAMJ,SAASC,aAAT,CAAuB,OAAvB,CAAV;AACAG,gBAAIF,SAAJ,GAAgB,gBAAhB;AACA,gBAAIG,WAAWL,SAASC,aAAT,CAAuB,OAAvB,CAAf;AACAI,qBAASC,IAAT,GAAgB,UAAhB;AACAF,gBAAIG,WAAJ,CAAgBF,QAAhB;;AAEA;AACA,gBAAIG,OAAOR,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACAO,iBAAKN,SAAL,GAAiB,UAAjB;AACA,gBAAIO,IAAIT,SAASU,cAAT,CAAwBZ,UAAxB,CAAR;AACAU,iBAAKD,WAAL,CAAiBE,CAAjB;;AAEA;AACA,gBAAIE,OAAOX,SAASC,aAAT,CAAuB,QAAvB,CAAX;AACA,gBAAIW,OAAOZ,SAASC,aAAT,CAAuB,QAAvB,CAAX;AACAU,iBAAKT,SAAL,GAAiB,cAAjB;AACAU,iBAAKV,SAAL,GAAiB,cAAjB;AACAS,iBAAKR,EAAL,gBAAqBN,QAArB;AACAe,iBAAKT,EAAL,kBAAuBN,QAAvB;AACAc,iBAAKE,SAAL,GAAiB,MAAjB;AACAD,iBAAKC,SAAL,GAAiB,QAAjB;;AAEAF,iBAAKG,gBAAL,CAAsB,OAAtB,EAA+B,UAAUH,IAAV,EAAgB;AAC3CX,yBAASe,cAAT,CAAwBJ,KAAKK,IAAL,CAAU,CAAV,EAAab,EAArC;AACH,aAFD;AAGAS,iBAAKE,gBAAL,CAAsB,OAAtB,EAA+B,UAAUF,IAAV,EAAgB;AAC3CK,wBAAQC,GAAR,CAAYN,KAAKI,IAAL,CAAU,CAAV,EAAab,EAAzB;AACA;AACA,oBAAIgB,iBAAiBnB,SAASe,cAAT,CAAwBH,KAAKI,IAAL,CAAU,CAAV,EAAab,EAArC,EAAyCiB,UAA9D;AACA,oBAAIC,KAAKF,eAAeC,UAAxB;AACAC,mBAAGC,WAAH,CAAeH,cAAf;;AAEA;AACAzB,0BAAU6B,MAAV,CAAiB7B,UAAU8B,SAAV,CAAoB;AAAA,2BAASC,MAAMC,GAAN,KAAcC,SAASR,eAAehB,EAAxB,CAAvB;AAAA,iBAApB,CAAjB,EAA0F,CAA1F,EAR2C,CAQmD;AACjG,aATD;;AAWA;AACAJ,eAAGQ,WAAH,CAAeH,GAAf;AACAL,eAAGQ,WAAH,CAAeC,IAAf;AACAT,eAAGQ,WAAH,CAAeI,IAAf;AACAZ,eAAGQ,WAAH,CAAeK,IAAf;;AAEA;AACAZ,qBAASe,cAAT,CAAwB,MAAxB,EAAgCR,WAAhC,CAA4CR,EAA5C;AACH;;AAED;;;;+BACO;AACHC,qBAASe,cAAT,CAAwB,MAAxB,EAAgCF,SAAhC,GAA4C,EAA5C;AADG;AAAA;AAAA;;AAAA;AAEH,qCAAiBnB,SAAjB,8HAA4B;AAAA,wBAAnBkC,IAAmB;;AACxB,yBAAKC,aAAL,CAAmBD,KAAKF,GAAxB,EAA6BE,KAAKE,KAAlC;AACH;AAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKN;;;;;;IAGCC,Y;;;AACF,4BAAc;AAAA;;AAAA;AAAY;;;;oCAEd;AACR,gBAAIjC,aAAaE,SAASe,cAAT,CAAwB,YAAxB,EAAsCe,KAAvD;;AAEA,gBAAIhC,eAAe,EAAnB,EAAuB;AACnBkC,sBAAM,2BAAN;AACH,aAFD,MAGK;AACDtC,0BAAUuC,IAAV,CAAe;AACX,2BAAOxC,IADI;AAEX,6BAASK;AAFE,iBAAf,EADC,CAIE;;AAEH;AACAL;AACH;AACDO,qBAASe,cAAT,CAAwB,YAAxB,EAAsCe,KAAtC,GAA8C,EAA9C;AACH;;;;EAnBsBlC,kB","file":"app.js","sourcesContent":["//Global Variables\r\nlet node = 0;\r\nlet tasksList = new Array();\r\n\r\nclass BaseElementUpdater {\r\n    constructor() { }\r\n\r\n    LoadDashboard(inputKey, inputValue) {\r\n        //Creating li element\r\n        let li = document.createElement(\"li\");\r\n        li.className = \"list-group-item list-group-item-info\";\r\n        li.id = `${inputKey}`;\r\n\r\n        //Adding Label with Checkbox\r\n        let lbl = document.createElement('label');\r\n        lbl.className = \"check col-sm-1\";\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = \"checkbox\"\r\n        lbl.appendChild(checkbox);\r\n\r\n        //Adding Label with Input value\r\n        let lbl1 = document.createElement('label');\r\n        lbl1.className = \"col-sm-9\";\r\n        let t = document.createTextNode(inputValue);\r\n        lbl1.appendChild(t);\r\n\r\n        //Adding Edit and Cancel buttons\r\n        let btn1 = document.createElement('button');\r\n        let btn2 = document.createElement('button');\r\n        btn1.className = \"btn btn-info\";\r\n        btn2.className = \"btn btn-info\";\r\n        btn1.id = `editBtn_${inputKey}`;\r\n        btn2.id = `removeBtn_${inputKey}`;\r\n        btn1.innerHTML = \"Edit\";\r\n        btn2.innerHTML = \"Remove\";\r\n\r\n        btn1.addEventListener('click', function (btn1) {\r\n            document.getElementById(btn1.path[0].id);\r\n        })\r\n        btn2.addEventListener('click', function (btn2) {\r\n            console.log(btn2.path[0].id);\r\n            //Deleting row from HTML\r\n            let removeChileRow = document.getElementById(btn2.path[0].id).parentNode;\r\n            let ul = removeChileRow.parentNode;\r\n            ul.removeChild(removeChileRow);\r\n\r\n            //tasksList.splice(removeChileRow.id, 1);\r\n            tasksList.splice(tasksList.findIndex(index => index.key === parseInt(removeChileRow.id)), 1); //Deleting record from Global list\r\n        })\r\n\r\n        //Appending HTML dynamically to li node\r\n        li.appendChild(lbl);\r\n        li.appendChild(lbl1);\r\n        li.appendChild(btn1);\r\n        li.appendChild(btn2);\r\n\r\n        //Adding row to the dashboard\r\n        document.getElementById(\"myUL\").appendChild(li);\r\n    }\r\n\r\n    //Loading all the tasks\r\n    Load() {\r\n        document.getElementById('myUL').innerHTML = \"\";\r\n        for (var item of tasksList) {\r\n            this.LoadDashboard(item.key, item.value);\r\n        }\r\n    }\r\n}\r\n\r\nclass AddNewRecord extends BaseElementUpdater {\r\n    constructor() { super(); }\r\n\r\n    AddNewRow() {\r\n        let inputValue = document.getElementById(\"addNewTask\").value;\r\n\r\n        if (inputValue === '') {\r\n            alert(\"You must write something!\");\r\n        }\r\n        else {\r\n            tasksList.push({\r\n                'key': node,\r\n                'value': inputValue\r\n            });//Storing value to global variable\r\n\r\n            super.Load();\r\n            node++;\r\n        }\r\n        document.getElementById(\"addNewTask\").value = '';\r\n    }\r\n\r\n}"]}